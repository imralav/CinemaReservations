buildscript {
    ext { springBootVersion = '1.4.2.RELEASE' }
    repositories { mavenCentral() }
    dependencies { classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}") }
}
plugins { id "com.moowork.node" version "1.0.1" }

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'CinemaReservations'
    version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.flywaydb:flyway-core')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    runtime('mysql:mysql-connector-java')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task cleanPublicFolder(type: Delete) {
    def dirName = project.projectDir.getAbsolutePath() + '/src/main/resources/public'
    file( dirName ).list().each{ f -> delete "${dirName}/${f}" }
}

clean.dependsOn cleanPublicFolder

task frontendTest(type: NpmTask) {
    description 'Used to run frontend tests'
    args = ['test']
    execOverrides {
      it.workingDir = 'frontend'
    }
}

test.dependsOn frontendTest

task frontendCopy(type: NpmTask) {
    description 'Copies frontend resources to public resource dir'
    args = ['run', 'copy'];
    execOverrides {
      it.workingDir = 'frontend'
    }
}

task frontend() {
    dependsOn 'frontendTest'
    dependsOn 'frontendCopy'
    description 'Responsible for testing, building and copying frontend resources'
}

assemble.dependsOn frontendCopy
processResources.dependsOn frontendCopy
jar.mustRunAfter frontendCopy
